---
title: IntroducingWeb Mapping Services
jupytext:
  text_representation:
    extension: .md
    format_name: myst
    format_version: 0.13
    jupytext_version: 1.14.6
kernelspec:
  display_name: Python 3 (ipykernel)
  language: python
  name: python3


---

::: {.callout-note icon=false}

# Summary

We learned how to use `cartopy` to plot maps and we will now look at plotting basemap images in various projections by combining `cartopy` with online repositories of map data. Specifically, we will use web map services (WMS) and web map tile services (WMTS) to access satellite imagery.
:::

<!-- We are going to work through a number of the examples and try to extend them to do the kinds of things you might find interesting and useful in the future. The examples are in the form of a [gallery](http://scitools.org.uk/cartopy/docs/latest/gallery.html)

You might also want to look at the [list of map projections](https://scitools.org.uk/cartopy/docs/latest/reference/projections.html) from time to time. Not all maps can be plotted in every projection (sometimes because of bugs and sometimes because they are not supposed to work for the data you have) but you can try them and see what happens.

Cartopy is built on top of a lot of the matplotlib graphing tools. It works by introducing a series of projections associated with the axes of a graph. On top of that there is a big toolkit for reading in images, finding data from standard web feeds, and manipulating geographical objects. Many, many libraries are involved and sometimes things break. Luckily the installation that is built for this course is about as reliable as we can ever get. I'm just warning you, though, that it can be quite tough if you want to put this on your laptop from scratch. -->

## Let's get started

We have a number of imports that we will need almost every time.

If we are going to plot anything then we need to include **matplotlib**.

```{pyodide}
#| autorun: true
import matplotlib.pyplot as plt
import cartopy.crs as ccrs

import owslib
from owslib.wms import WebMapService
from owslib.wmts import WebMapTileService

```


```{pyodide}
url = 'https://ows.terrestris.de/osm/service'
layer = 'TOPO-WMS'

fig = plt.figure(figsize=(10,10))
ax = fig.add_subplot(1, 1, 1, projection=ccrs.Mercator())

ax.add_wms(url, layer)
ax.set_extent([-15, 25, 35, 60], crs=ccrs.PlateCarree())

plt.show()
```

How to find out what layers there are:

```{pyodide}
url = 'https://ows.terrestris.de/osm/service'
layer = 'TOPO-WMS'

wms_url = "https://ows.terrestris.de/osm/service"
wms = WebMapService(wms_url, version="1.3.0")

print(f"WMS version: {wms.identification.version}")
print(f"WMS title: {wms.identification.title}")
print(f"WMS abstract: {wms.identification.abstract}")

list(list(wms.contents)) # Use `list` because it prints nicely !
```



```{pyodide}
GA_wmts = "https://services.ga.gov.au/gis/rest/services/GA_Surface_Geology/MapServer/WMTS"
layer = 'GA_Surface_Geology'
wmts = WebMapTileService(GA_wmts)


fig = plt.figure(figsize=(10,10))
ax = fig.add_subplot(1, 1, 1, projection=ccrs.Mercator())

ax.add_wmts(GA_wmts, layer)
ax.set_extent((135.8, 137.3, -34.3, -33.1), crs=ccrs.PlateCarree())

plt.show()
```

```{pyodide}
## NASA / GIBS earth imagery

# Define the WMTS URL
gibs_wmts_url = "https://gibs.earthdata.nasa.gov/wmts/epsg4326/best/wmts.cgi"

fig = plt.figure(figsize=(10,10))

ax = fig.add_subplot(1, 1, 1, projection=ccrs.PlateCarree())
# ax.set_extent([-180, 180, -90, 90])  # World extent
ax.set_extent((135, 155, -40, -31))  # SE Australia

# Add WMTS layer with a specific date
layer = "MODIS_Terra_CorrectedReflectance_TrueColor"
time = "2025-02-01"
ax.add_wmts(gibs_wmts_url, layer_name=layer, wmts_kwargs={"time": time})

# plt.title('Land Surface Reflectance (Bands M11-M7-M5, Best Available, VIIRS, Suomi NPP)')
plt.show()
```

<!--
## WFS servers

Can't get the owslib networking to fire up in pyodide - I do have a urllib3 replacement available that uses html POST requests.

Examples: GA Digital Earth Australia (WFS / WFTS and web) - sentinel data
-->
